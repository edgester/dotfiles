---
# Based on https://www.redhat.com/sysadmin/ansible-configure-vim
- name: Config Vim with plugins
  hosts: localhost
  gather_facts: yes
  become: no
  vars:
    vim_dir: "{{ ansible_env.HOME }}/.vim"
    fzf_dir: "{{ ansible_env.HOME }}/.fzf"

  tasks:
    - name: apply dotfiles role
      include_role:
        name: geerlingguy.dotfiles

    - name: clone fzf git repo
      ansible.builtin.git:
        dest: "{{ fzf_dir }}"
        repo: https://github.com/junegunn/fzf.git
        clone: yes
        depth: 1
        update: yes
        version: master

    - name: Install fzf binary
      ansible.builtin.command: "{{ fzf_dir }}/install --bin"
      args:
        creates: "{{ fzf_dir }}/bin/fzf"

    - name: Ensure .vim/{autoload,bundle} directory exists
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        recurse: no
        mode: 0750
      loop:
        - "{{ vim_dir }}"
        - "{{ vim_dir }}/autoload"
        - "{{ vim_dir }}/bundle"

    - name: Install vim-plug
      ansible.builtin.get_url:
        dest: "{{ vim_dir }}/autoload/plug.vim"
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        mode: 0600

    - name: Install github cli
      include_tasks: gh_cli.yml
      tags: github

    - name: source bashrc.d in bashrc
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: "[ -f ~/.bashrc.d/bashrc.init ] && source ~/.bashrc.d/bashrc.init"

    - name: Create regolith config folder
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/regolith"
        state: directory
        mode: '0700'

    - name: Link regolith config to dotfiles git repo
      ansible.builtin.file:
        src: "{{ dotfiles_repo_local_destination }}/.config/regolith/i3"
        dest: "{{ dotfiles_home }}/.config/regolith/i3"
        state: link

    - name: Set git config
      community.general.git_config:
        name: "{{ item.name }}"
        scope: global
        value: "{{ item.value }}"
      loop:
        - name: push.default
          value: matching
        - name: gc.auto
          value: 1
        - name: core.exludesfile
          value: "{{ ansible_env.HOME }}/.gitignore_global"
        - name: gpg.program
          value: gpg
        - name: commit.gpgSign
          value: "true"
        - name: tag.gpgSign
          value: "true"

    - name: Add git aliases
      community.general.git_config:
        name: "alias.{{ item.name }}"
        scope: global
        value: "{{ item.value }}"
      loop:
        - name: br
          value: branch
        - name: co
          value: checkout
        - name: st
          value: status
        - name: tree
          value: log --graph --oneline --all
